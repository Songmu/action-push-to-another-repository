name: Push to Another Repository with a Signed Commit
description: >-
  Push files to another repository. Ideal for GitHub Pages, docs sync, and
  mirrors. Creates signed commits with App tokens.
inputs:
  token:
    description: Github token with write access to the destination repository
    required: false
    default: ${{ github.token }}
  destination-repository:
    description: Destination repository
    required: true
  source-directory:
    description: '[Optional] Source directory from the origin directory'
    default: '.'
    required: false
  destination-branch:
    description: >-
      [Optional] set destination branch name for the destination repository. Defaults
      to "main"
    default: main
    required: false
  commit-message:
    description: >-
      [Optional] commit message for the output repository.
      LAST_COMMIT_MESSAGE is replaced by the last commit message in the source repo
      ORIGIN_COMMIT is replaced by the URL@commit in the origin repo
      GIT_REF is replaced by the origin $GIT_REF
    default: 'LAST_COMMIT_MESSAGE (via ORIGIN_COMMIT from GITHUB_REF)'
    required: false
  destination-directory:
    description: '[Optional] The directory to wipe and replace in the destination repository'
    default: ''
    required: false
outputs:
  pushed:
    description: 'Whether a commit was pushed to the destination repository'
    value: ${{ steps.commit.outputs.pushed }}
runs:
  using: composite
  steps:
  - name: Checkout destination repository into a worktree
    uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    with:
      repository: ${{ inputs.destination-repository }}
      token: ${{ inputs.token }}
      ref: ${{ inputs.destination-branch }}
      persist-credentials: false
      path: .push-to-another-repository
  - id: prepare
    name: "Prepare the destination repository in the worktree before committing"
    run: $GITHUB_ACTION_PATH/entrypoint.sh
    shell: bash
    env:
      SOURCE_DIRECTORY: ${{ inputs.source-directory }}
      COMMIT_MESSAGE: ${{ inputs.commit-message }}
      DESTINATION_DIRECTORY: ${{ inputs.destination-directory }}
      WORKTREE_DIR: .push-to-another-repository
  - id: commit
    uses: suzuki-shunsuke/commit-action@b4aee3f297a855b761e0db5736a73566a7807fe2 # v0.0.11
    with:
      github_token: ${{ inputs.token }}
      repository: ${{ inputs.destination-repository }}
      commit_message: ${{ steps.prepare.outputs.commit-message }}
      branch: ${{ inputs.destination-branch }}
    working-directory: .push-to-another-repository
    continue-on-error: true
  - id: fallback
    name: fallback to git command for large assets
    if: steps.commit.outcome == 'failure'
    run: |
      set -euo pipefail
      git config user.name "${GITHUB_ACTOR}"
      git config user.email "${GITHUB_ACTOR}"@users.noreply.github.com
      repo="https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/${DESTINATION_REPOSITORY}.git"
      git add .
      git diff-index --quiet HEAD || git commit --message "$COMMIT_MESSAGE"
      git push $repo --set-upstream "$DESTINATION_BRANCH"
    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_TOKEN: ${{ inputs.token }}
      COMMIT_MESSAGE: ${{ steps.prepare.outputs.commit-message }}
      DESTINATION_BRANCH: ${{ inputs.destination-branch }}
      DESTINATION_REPOSITORY: ${{ inputs.destination-repository }}
    working-directory: .push-to-another-repository
    continue-on-error: true
    shell: bash
  - name: remove worktree
    run: |
      rm -rf "$WORKTREE_DIR"
    shell: bash
    if: always()
    env:
      WORKTREE_DIR: .push-to-another-repository
  - name: Check if commit or fallback succeeded
    if: steps.fallback.outcome == 'failure'
    run: exit 1
    shell: bash
branding:
  icon: git-commit
  color: green
